{"version":3,"sources":["components/Card/Card.js","components/card-list/cardcomp.js","components/Searchbox/searchf.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","mons","id","name","email","Cardcomp","this","map","mon","Component","Searchf","placeholder","handlechange","type","onChange","App","e","setState","searchfield","target","value","state","fetch","then","res","json","user","filteredmons","filter","m","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAeeA,EAZF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,KAAKC,GAAG,EAAxC,eACvB,6BAAKL,EAAMI,KAAKE,OAChB,4BAAIN,EAAMI,KAAKG,YCUXC,E,kDAbZ,WAAYR,GACX,uCACSA,G,0CAET,WACI,OACI,qBAAKC,UAAU,YAAf,SACDQ,KAAKT,MAAMI,KAAKM,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,CAAmBP,KAAMO,GAAdA,EAAIN,a,GAT7BO,a,MCWTC,MAVf,YACE,IADgBC,EACjB,EADiBA,YAAcC,EAC/B,EAD+BA,aAE5B,OACI,8BACK,uBAAOd,UAAU,SAASe,KAAK,SAASF,YAAaA,EAAcG,SAC7DF,OCqCJG,E,kDAxCb,aACE,IAAD,8BACE,gBAeFH,aAAa,SAACI,GAEd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfnC,EAAKC,MACL,CACCpB,KAAM,GACNiB,YAAY,IANf,E,qDAWA,WACC,IAAD,OACEI,MAAM,8CAA8CC,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACpEF,MAAK,SAAAG,GAAI,OAAG,EAAKT,SAAS,CAAChB,KAAKyB,S,oBAMpC,WAIE,MAA2BpB,KAAKe,MAAzBpB,EAAP,EAAOA,KAAMiB,EAAb,EAAaA,YAEPS,EAAc1B,EAAK2B,QAAQ,SAAAC,GAAC,OAAIA,EAAE1B,KAAK2B,cAAcC,SAASb,EAAYY,kBAChF,OACA,sBAAKhC,UAAU,MAAf,UACE,uDACC,cAAC,EAAD,CAASa,YAAY,kBAAkBC,aAAcN,KAAKM,eAE1D,cAAC,EAAD,CAAUX,KAAO0B,W,GAnCJlB,aCQLuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1f7695e2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './cardstyle1.css'\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.mons.id+4}?set=set2`}/>\r\n           <h1>{props.mons.name}</h1>\r\n           <p>{props.mons.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Card\r\n\r\n","import React, { Component } from 'react'\r\nimport './cardstyle.css'\r\nimport  Card  from '../Card/Card';\r\n class Cardcomp extends Component \r\n {\r\n   constructor(props)\r\n   {\r\n       super(props);\r\n   }\r\n    render() {\r\n        return (\r\n            <div className='card-list'>\r\n          {this.props.mons.map(mon=> (<Card key={mon.id} mons={mon} />))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cardcomp\r\n","import './searchbox.css'\r\nimport React from 'react'\r\n\r\n\r\nfunction Searchf({placeholder , handlechange})\r\n {\r\n    return (\r\n        <div>\r\n             <input className='search' type='search' placeholder={placeholder}  onChange=\r\n                  {handlechange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchf\r\n","import React ,{ Component } from 'react';\nimport './App.css';\nimport  Cardlist from './components/card-list/cardcomp';\nimport Searchf from './components/Searchbox/searchf';\nclass  App  extends Component\n{\n  constructor()\n   {\n     super();\n\n     this.state=\n     {\n      mons :[],\n      searchfield:''\n     };\n\n    //  this.handlechange=this.handlechange.bind(this);\n   }\n   componentDidMount()\n   {\n     fetch('https://jsonplaceholder.typicode.com/users').then( res => res.json())\n     .then(user=> this.setState({mons:user}))\n   }\n   handlechange=(e)=>\n   {\n   this.setState({searchfield: e.target.value})\n   }\n  render()\n  {\n    \n    \n    const {mons, searchfield}= this.state;\n\n    const filteredmons= mons.filter( m => m.name.toLowerCase().includes(searchfield.toLowerCase()));\n    return (\n    <div className='App'>\n      <h1> Monsters Exhibition </h1>\n       <Searchf placeholder='Search Monsters' handlechange={this.handlechange}/>\n\n       <Cardlist mons= {filteredmons} />\n    </div>\n    )\n     \n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render\n(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}